/*
 * $Id: ChangeLog.txt $
 */
/*
 * Use this format for the entry headers:
 *    YYYY-MM-DD HH:MM UTC[-|+]hhmm Name/Username <your_email@address>
 * Use this marks for file entries:
 *   '*', '+' or '-' to mean the file was modified, added or deleted.
 * Use this marks for detail entries:
 *    '*' Changed: ...           '!' Fixed: ....
 *    '+' Added: ...             '%' Optimized: ...
 *    '-' Removed: ...           ';' Comment
 */

2019-09-12 19:27 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_internal.prg
     ! ON CLICK event is not working.
     ! TAB freezes app if internal has no controls.
     * Some format.

2019-09-10 20:44 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_report.prg
     ! Missing READONLY property at DATA Type.

2019-09-10 18:43 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_xbrowse.prg
     * Includes reordered.
     * Table parameter of function _OOHG_Messages replaced by
       its corresponding define for readability.
     ! ::Picture is inserted twice when a column is added.

2019-09-10 18:40 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_application.prg
     * Includes reordered.
     * Table parameter of function _OOHG_Messages replaced by
       its corresponding define for readability.
     ! RTE on release.

2019-09-10 18:38 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_internal.prg
   * core\source\h_msgbox.prg
     * Includes reordered.

2019-09-10 18:36 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_windows.prg
     * Table parameter of function _OOHG_Messages replaced by
       its corresponding define for readability.

2019-09-10 18:35 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_browse.prg
   * core\source\h_controlmisc.prg
   * core\source\h_crypt.prg
   * core\source\h_edit.prg
   * core\source\h_edit_ex.prg
   * core\source\h_error.prg
   * core\source\h_graph.prg
   * core\source\h_grid.prg
   * core\source\h_help.prg
   * core\source\h_ini.prg
   * core\source\h_menu.prg
   * core\source\h_registry.prg
   * core\source\h_report.prg
   * core\source\h_scrsaver.prg
     * Table parameter of function _OOHG_Messages replaced by
       its corresponding define for readability.

2019-09-10 18:29 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_init.prg
     * Some messages.
     * Table parameter of function _OOHG_Messages replaced by
       its corresponding define for readability.

2019-09-10 16:43 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_form.prg
     - Forgotten debug call.
     * Table parameter of function _OOHG_Messages replaced by
       its corresponding define for readability.

2019-09-10 16:40 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   + core\include\h_init.ch
     ; Contains defines to use with function _OOHG_Messages.

2019-09-09 22:35 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\i_hb_compat.ch
     + AScan with 5 parameters.
   * core\include\i_pseudofunc.ch
     + SetInteractiveClose.
   * core\include\i_var.ch
     + _OOHG_InteractiveClose and _OOHG_KeepAppOnMainRelease.
   * core\include\i_window.ch
     + INTERACTIVECLOSE [ ON | OFF | QUERY | QUERY MAIN ] clause.
   * core\source\h_application.prg
     + Support for global vars _OOHG_InteractiveClose and
       _OOHG_KeepAppOnMainRelease.
     * _OOHG_Main can now be set to NIL if MAIN is released
       and _OOHG_KeepAppOnMainRelease is .T.
   * core\source\h_form.prg
     - Static var _OOHG_InteractiveClose.
     - Function SetInteractiveClose.
     + DATA InteractiveClose to TForm CLASS.
       Use it to establish a specific value on per form basis.
       On form's close this data will be checked first, if
       it's value is -1 (default value) then the global
       value of _OOHG_InteractiveClose will be used.
     - WM_DESTROY handler.
     * The destruction of the windows is now done by the
       default Windows procedure.
     ! Method Release was wrongly checking interactive close
       which prevented the programmatic release of the form.
     ! DEFINE WINDOW registration failed error.

2019-09-08 22:20 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_form.prg
     + ToolTip release at METHOD Events_Destroy.
     + Set form's hWnd to NIL after window destruction.
     * Some format.

2019-09-08 22:10 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\i_textbox.ch
     + TOOLTIP sub-clause to ACTION and ACTION2 clauses.
   * core\include\i_windefs.ch
     + Defines for EM_SETPASSWORDCHAR and EM_GETPASSWORDCHAR.
   * core\source\h_textbox.prg
     * Some format.
     + DATA aBitmap to hold buttons bitmaps.
     + DATA bAction1 to hold button1 action.
     + DATA bAction2 to hold button2 action.
     + DATA cToolTipBut1 to hold button1 tooltip.
     + DATA cToolTipBut2 to hold button2 tooltip.
     + DATA nBtnWidth to hold button's width.
     + DATA lRecreateOnReset. For textbox with PASSWORD
       clause, .T. forces control recreation to reset
       password char to windows default. .F. means use
       an '*' as password char instead.
     + METHOD Release.
     + METHOD ReleaseAction.
     + METHOD ReleaseAction2.
     + METHOD DefineAction.
     + METHOD DefineAction2.
     + METHOD RedefinePasswordStyle.
     + METHOD PasswordChar.

2019-09-08 21:01 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_menu.prg
     + METHOD Enabled to TMenu CLASS.
     * Use stock brushes to reduce resource usage.

2019-09-08 20:58 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_toolbar.prg
     * The lib no longer generates an RTE when the user clicks a
       DROPDOWN button that has no menu defined.

2019-09-08 20:52 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\bostarus.prg
     ! Wrong function names and declarations.
     - Duplicated code.
   * core\source\c_gdiplus.c
     ! Missing wrapper functions.

2019-09-08 20:46 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_init.prg
     * Comments.
     + Functions InitMessages and _OOHG_Messages are now
       thread safe.

2019-09-08 20:42 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\c_winapimisc.c
     + Functions GetGDIObjects, GetUserObjects and GetKernelObjects.

2019-09-08 20:41 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_combo.prg
     ! Missing call to ::SethWnd at TEditCombo CLASS.

2019-09-08 20:39 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\c_image.c
     ! Resource leaks at C functions _OOHG_OleLoadPicture,
       _OOHG_ScaleImage, _OOHG_RotateImage and _OOHG_LoadImage.
     + Check for empty filename at function _OOHG_SIZEOFBITMAPFROMFILE.
     * Function _OOHG_SCALEIMAGE can now operate on a standalone hImage.
     ! Resource leak at function _OOHG_BLENDIMAGE.
     * Some format.

2019-09-08 20:20 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_application.prg
     + Code to unregister TInternal, TPicture and TTextArray
       window classes.
   * core\source\h_internal.prg
     + Function _OOHG_TINTERNAL_UNREGISTER.
   * core\source\h_picture.prg
     + Function _OOHG_TPICTURE_UNREGISTER.
     * Use stock brush to reduce resource usage.
   * core\source\h_textarray.prg
     + Function _OOHG_TTEXTARRAY_UNREGISTER.

2019-09-08 20:13 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\i_timer.ch
     + ONCE clause.

   * core\include\oohg.h
     + Define of s_Events_TimeOut.
     + Member OriginalBrush to OOHG_Window structure.
     + Declarations for some functions.

   * core\source\c_controlmisc.c
     + Events_TimeOut to s_SymbolNames array.

   * core\source\h_controlmisc.prg
     ! Resource leak at METHOD Release of TControl CLASS
       caused by the release of the control before the
       execution of METHOD Release of TWindow CLASS.
     ! Resource leak at METHOD SetFont of TControl CLASS.
     ! Resource leak at METHOD ClearBitmaps of TControl CLASS.
     ! Resource leak at METHOD Events_Color of TControl CLASS.
     + METHOD PosAddToCtrlsArrays to TControl CLASS.

   * core\source\h_timer.prg
     * Some format.
     + DATA lOnce. Defaults to .F.
     + METHOD Events_TimeOut to executed the associated action.

   * core\source\h_windows.prg
     + METHOD Events_Timeout to CLASS TWindow.
     ! RTE at function ExitProcess when Application object
       is not defined.
     ! Resouce leak at METHOD Release of TWindow CLASS.
     * METHOD Release of TWindow CLASS no longer sets
       ::hWnd to NIL.
       ; For forms it's done by WM_CLOSE handler.
       ; For controls it's done by METHOD Release of
         TControl CLASS.
     * WM_CTLCOLORSTATIC and WM_CTLCOLORLISTBOX handlers
       at METHOD Events of TWindow CLASS now send a color
       constant to METHOD Events_Color instead of sending
       a COLORREF.
     * WM_TIMER handler now calls METHOD Events_TimeOut
       instead of executing OnClick event.

2019-09-08 20:06 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_scroll.prg
     * Comment.

2019-09-08 18:47 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\i_button.ch
     + NODESTROY clause.
       It prevents the destruction of the hbitmap at release.
   * core\source\h_button.prg
     + DATA lNoDestroy. Defaults to .F.
     ! Missing parameters at method DefineImage.
     ! Resource leak.

2019-08-30 19:30 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\i_var.prg
     + _OOHG_EnableClassUnreg and _OOHG_ExitOnMainRelease.
     ; Both default to .T.
   * core\source\h_application.prg
     + Logic to handle the registration and unregistration of
       window classes.
     + Support for _OOHG_EnableClassUnreg and
       _OOHG_ExitOnMainRelease.
     ! Initial values of ThisControl var.
     * Use _OOHG_DeleteArrayItem instead of ADel + ASize.
     + Cleanup code to method Release that releases stacks,
       mutexes, objects and arrays.
   * core\source\h_form.prg
     * Some format and comments.
     % Reduced the amount of memory used by a program which
       creates a great number of nameless windows.
     ; Note that the old behaviour was not leaking memory but
       delaying its release until app's end.
     ; To restore previous behaviour set _OOHG_EnableClassUnreg
       var to .F.
     ! Method BackColor was not resetting the window class brush.
     * Event codeblocks are set to NIL at method Events_Destroy
       to avoid problems with detached references.
     + Method Events_Destroy is now called by _ReleaseWindowList
       function to release all attached controls and data.
     * Function RegisterWindow now returns the bitmap asociated
       with the class icon to allow releasing it at class unreg.

2019-08-30 18:44 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_menu.prg
     + Some cleanup code to release attached objects.

2019-08-30 18:27 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_richeditbox.prg
     + Function _RichEdit_DeInit. Now RICHED20.DLL is loaded once.
     * Format.

2019-08-30 17:58 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\c_winapimisc.c
     + Functions _ComCtl32_DeInit, GetComCtl32Version, IsAppThemed
       and IsXPThemeActive moved from h_windows.prg.
     + Wrapper functions for theme related functions.
   * core\source\h_button.prg
   * core\source\h_checkbox.prg
   * core\source\h_controlmisc.prg
   * core\source\h_radio.prg
   * core\source\h_tooltip.prg
     * Use wrapper functions to call theme related functions.
   * core\source\h_windows.prg
     + Method IconHandle to CLASS TWindow.
     + Method ReleaseAttached of CLASS TWindow now sets to NIL the
       codeblocks associated to hot keys, accelerator commands and
       scrollbars.
     * _OOHG_NestedSameEvent and _OOHG_GlobalRTL are now declared
       as BOOL.
     * _OOHG_NestedSameEvent is now thread safe.
     ! Resource leak at method Release of CLASS TWindows.
     * Use wrapper functions to call theme related functions.
     - Functions _ComCtl32_DeInit, GetComCtl32Version, IsAppThemed
       and IsXPThemeActive moved to c_winapimisc.c.

2019-08-30 17:24 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\oohg.h
     + Declarations for some functions.

2019-08-29 16:14 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\c_winapimisc.c
     - No longer needed function declarations.

2019-08-29 16:12 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\oohg.h
     + Declarations for some functions.
     + IconHandle member to OCTRL structure.

2019-08-29 16:08 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\bostaurus.prg
     ! Wrong parameters prevent library building.

2019-08-28 20:25 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\bostaurus.ch
     + BT_DIRECTORYINFO as pseudofunction.
   * core\source\bostaurus.prg
     - Comments.
     + Function bt_Bitmap_To_Stream (previously commented out).
     + Function bt_GetEncoderCLSID (previously commented out).
     + Function bt_SaveGDIPlusPicture (previously commented out).
     * Function bt_SpaceToBlank now calls _SpaceToBlank.
     * Function bt_LocalDateTimeToDateTimeANSI now calls
       _LocalDateTimeToDateTimeANSI.
     - Function win_StrRetToBuf (moved to c_winapimisc.c).
     * Functions that need GDI+ support now use c_gdiplus.c
   * core\source\c_activex.c
     + Function _Ax_DeInit. Now atl.dll is loaded once.
   * core\source\c_gdiplus.c
     * Comments and format.
     * Uncrustified using Harbour specs.
     * Static vars are now thread safe.
     - Uneeded code from function SaveHBitmapToFile that was
       leaking memory.
   * core\source\c_image.c
     * Static var _OOHG_StretchBltMode is now thread safe.
     ! GDI object leak at function _OOHG_LoadImage.
     * Use hb_parclen() instead of strlen( hb_parc() ).
     - Unneeded code.
   * core\source\c_msgbox.c
     - Function MessageBoxTimeout (moved to c_winapimisc.c).
   * core\source\c_winapimisc.c
     * Comments.
     * Function MemoryStatus now returns an array when no valid
       numeric parameter is specified. Useful  to chase leaks.
     + Function _ShlWAPI_DeInit. Now shlwapi.dll is loaded once.
     + Function _ProcessLib_DeInit. Now psapi.dll is loaded once.
     + Function _User32_DeInit. Now user32.dll is loaded once.
     + Functions _SpaceToBlank, _LocalDateTimeToDateTimeANSI,
       win_StrRetToBuf and DirectoryInfo (from bostaurus.prg).
     + Function GetObjectCount. It returns an array with the
       current number of opened GDI, user and kernel objects.
     + Function EmptyWorkingSet.
     + Function MessageBoxTimeout (from c_msgbox.c).
     + Function SetLayeredWindowAttributes (from c_windows.c).
     + Function FreeLibraries to unload libs loaded by OOHG.
   * core\source\c_windows.c
     - Function SetLayeredWindowAttributes (moved to c_winapimisc.c).
     * Function DestroyWindow now return .T./.F. on success/fail.
     + Comments.
     ! Function SetWindowBackColor now will call method BackColor
       if the window's hWnd belongs to a TForm object.
     + Function GetWindowBackColor.
     + Function _DWMAPI_DeInit. Now dwmapi.dll is loaded once.
     - Function SetLayeredWindowAttributes (moved to c_winapimisc.c).

2019-08-28 18:03 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\i_pseudofunc.ch
     ! Typo.

2019-08-28 17:38 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\i_pseudofunc.ch
     ! Typo.
     + Pseudofunctions:
          _HMG_PRINTER_GetPrintableAreaWidth,
          _HMG_PRINTER_GetPrintableAreaHeight,
          _HMG_PRINTER_GetPrintableAreaHorizontalOffset,
          _HMG_PRINTER_GetPrintableAreaVerticalOffset,
          _HMG_PRINTER_GetPrinter and
          _HMG_PRINTER_aPrinters.

2019-08-28 17:18 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\i_hmg_compat.ch
     + Pseudofunctions _SetWindowBackColor and GlobalMemoryStatusEx.

2019-08-28 17:17 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\ChangeLog_001.txt
   * core\ChangeLog_002.txt
   * core\ChangeLog_003.txt
     ! Typos.

2019-08-10 22:51 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\c_image.c
     * Pacified some BCC compiler warnings.

2019-08-10 22:50 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\bostaurus.prg
     * Pacified some MinGW CLang compiler warnings.

2019-08-10 22:48 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\i_windefs.ch
     + Some treeview related notification codes.

2019-08-10 22:46 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\i_tree.ch
   * core\source\h_tree.prg
     + ON EXPAND and ON COLLAPSE events.

2019-08-10 22:44 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\compile.bat
   * core\compile_MINGW.BAT
     ! Wrong additional libraries prevent building harupdf sample.

2019-08-10 18:03 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_textbox.prg
     ! The images of the action buttons are shown clipped.

2019-08-10 10:24 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_grid.prg
     ! Control's value must be set before calling ON DELETE event
       handler to ensure that the grid is in a stable state.

2019-08-09 19:25 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\i_grid.ch
     + Event ON BEFOREINSERT.
       ; It's executed just before adding a new item to the grid.
         For virtual grids, you can use this event to produce the
         data that will be required by the new item.
   * core\source\h_grid.prg
     + OnBeforeInsert data to TGrid class.
     ! Do not add items to virtual grids at Define method because
       the item count is doubled.
     + The related cell information is set before OnDelete event.
       ; For virtual grids, you can use this event to discard the
         data related to the delelted item.
     * When deleting an item, the grid's value is now changed after
       the execution of the OnDelete event instead of before.

2019-08-07 17:56 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_grid.prg
     ! RTE when adding or deleting rows of a virtual grid.

2019-08-07 17:52 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\BuildApp_hbmk2.bat
   * core\compile_MINGW.BAT
   * core\resources\CompileRes_mingw.bat
   * core\source\BuildLib_hbmk2.bat
   * core\source\makelib_mingw.bat
     ! Path is not properly restored if it contains & chars.

2019-08-02 20:30 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\winprint.ch
     + BITMAP IMAGESIZE command.
   * core\source\h_print.prg
     + New parameter to PrintResource and PrintBitmap methods
       of TPRINTBASE class.
     + New parameter to PrintBitmapX method of THBPRINTER class.
   * core\source\winprint.prg
     + New parameter to Bitmap method of HBPRINTER class.

2019-08-01 20:26 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\i_windefs.ch
   * core\include\winprint.ch
     ! Duplicated defines error when both file are included.
   * core\source\c_image.c
     * _OOHG_BITMAPFROMFILE function can now work without an object.
   * core\source\h_print.prg
     + PrintResource method.
     ; This method uses the same logic than the Picture method of
       the TImage class.
     ; Use oPrint:PrintResource( ... ) to print an image from the
       resource file. Parameters:
       nLin, nCol   - line and column of the upper-left corner.
       nLinF, nColF - line and column of the bottom-right corner.
       cResource    - a resource identifier.
       lNoDIB       - See lNoDIBSection data of TImage class.
       lNo3DC       - See lNo3DColors data of TImage class.
       lNoTra       - See lNoTransparent data of TImage class.
       lNoChk       - See lNoCheckDepth data of TImage class.
       nMode        - what to do if the bitmap's size is different
                      from the canvas size: 0 for SCALE, 1 for
                      STRETCH and 3 for COPY.
       lClrOnClr    - bitmap stretching mode: .T. for COLORONCOLOR
                      or .F. for HALFTONE.
       lTranspBlt   - painting method: .T. for painting with
                      TransparentBlt function and .F. for painting
                      with StretchBlt and SRCCOPY parameter.
       uColor       - color that will be treated as transparent by
                      the TransparentBlt function: color number or
                      RGE array.
       lImgSize     - image size: .T. means ignore nLinF, nColF and
                      print using image size, .F. means honor them.

2019-07-31 19:57 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\bostaurus.prg
     * Some format.
     ! Release of the auxiliary mem DC.

2019-07-31 19:56 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\hbprinter_dyns.hbx
     * Updated.
   * core\include\winprint.ch
     + BITMAP command for printing an image using its handle.
   * core\source\h_image.prg
     * Some format.
     * Copy method does not honor its parameter.
   * core\source\h_print.prg
     + PrintBitmap and PrintBitmapX methods to TPRINTBASE class.
     + PrintBitmapX method to THBPRINTER class.
     ; Use oPrint:PrintBitmap( ... ) to print an image using it's
       handle. Parameters:
       nLin, nCol   - line and column of the upper-left corner.
       nLinF, nColF - line and column of the bottom-right corner.
       hBitmap      - a handle to the image. You can get the handle
                      from an Image control or from any of the
                      OOHG's functions that return an HBITMAP object.
       nMode        - what to do if the bitmap's size is different
                      from the canvas size: 0 for SCALE, 1 for
                      STRETCH and 3 for COPY.
       lClrOnClr    - bitmap stretching mode: .T. for COLORONCOLOR
                      or .F. for HALFTONE.
       lTranspBlt   - painting method: .T. for painting with
                      TransparentBlt function and .F. for painting
                      with StretchBlt and SRCCOPY parameter.
       uColor       - color that will be treated as transparent by
                      the TransparentBlt function: color number or
                      RGE array.
       lImgSize     - image size: .T. means ignore nLinF, nColF and
                      print using image size, .F. means honor them.
   * core\source\winprint.prg
     ! ASSIGN sentences are not compiled when NO_GUI is defined.
     + Bitmap method of HBPRINTER class.
     + ArrayIsValidColor static function at PRG level.
     + RR_GETPIXELCOLOR and RR_DRAWBITMAP functions at C level.

2019-07-26 20:13 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\compile_bcc.bat
     ! Exe build with xHarbour+BCC fails to start with message
       "no starting procedure".

2019-07-23 20:00 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\miniprint.prg
     ! Print dialog does not respond to clicks.

2019-07-20 16:13 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\i_spinner.ch
     * Required clause was changed to optional. This allows to
       change the order of the clauses without triggering a
       compiler error.

2019-07-19 22:48 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_report.prg
     ! RTE when memvar _OOHG_PrintLibrary is not defined.
     ! RTE because aLines is not defined.
     ! IMAGE clause is ignored when parsing a report file.

2019-07-19 22:32 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_print.prg
     + Added data TYPE to each subclass of TPrintBase.
       If you have a TPrint object named oPrint, you can identify
       it's subclass using oPrint:Type.

2019-07-18 20:15 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\oohg.hbc
     + Switch mt (because it's oohg specific).
     - Switch gtgui (must be used in .hbp file).
     * Some comments.

2019-07-18 20:14 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\oohg.ch
     + Two requests to fix building with Harbour 3.4
       compiled with clang compiler.

2019-07-18 20:13 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\include\i_window.ch
     + Support for NoDefWinProc property.
     + Support for NODWP clause.

   * core\source\h_application.prg
     + Support for a global modal hidden window.

   * core\source\h_windows.prg
     + DATA NoDefWinProc.
       Defaults to .F.
       When set to .T., the WM_PAINT handler will not call
       function DefWindowProc at it's beginning but at it's end.

   * core\source\h_form.prg
     * Reverted the change to WM_PAINT handler's default behavior
       done by commit 2019-02-17 11:36 UTC-0300 (hash 0073c75).
     ! This reversion fixes miniprint's not displaying the
       document in the preview window.
     * This reversion breaks code based on BosTaurus functions
       that paint on the form at ON PAINT event.
       To fix the code you must add the NODWP clause to the form
       or set to .T. it's NoDefWinProc data.
       See samples\bostaurus folder.
       INCOMPATIBLE
     + Support for NoDefWinProc switch at WM_PAINT handler to
       alter it's default behavior.

   * core\source\h_print.prg
     ! RTE at method BeginDoc.
     ! RTE at method EndDoc.
     ! Wrong default value of SelPrinter's preview parameter.
     ! Wrong default value of EndDoc's wait parameter.

   * core\source\miniprint.prg
     * Minor simplifications.
     ! Preview form can't be restored after minimizing it to the taskbar.

   * core\source\winprint.prg
     ! Minor simplifications.
     ! Preview form can't be restored after minimizing it to the taskbar.

2019-07-18 20:11 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_pdf.prg
     ! Wrong line's thickness.

2019-06-24 19:27 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\winprint.prg
     ! RTE 1132 "Array access error" at HBPRINTER:ENDDOC line 425.

2019-03-20 22:28 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
   * core\source\h_print.prg
     ! Restored _modalhide window at method BeginDoc. It's needed
       in case no MAIN window is defined to avoid and RTE.
     + Some validations to avoid an RTE if ::oWinReport is not
       defined at method EndDoc.
     ! Missing CLASS clause at TPDFPRINT's MaxCol and MaxRow methods.

2019-03-20 21:13 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
  * core\ChangeLog_006.txt
    ! File's title.

2019-03-20 21:11 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
  * core\source\h_activex.prg
    ! Unresolved external '_HB_FUN_TACTIVEX___ERROR' under xHarbour.

2019-03-20 20:32 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
  * core\source\h_grid.prg
    ! Compiler error under BCC58 on struct tagNMLVSCROLL.

2019-03-07 22:21 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
  * core\source\h_form.prg
    * TForm() for CHILD forms now accepts a hWnd instead of an
      object to use it as the form's parent. Please note that, if
      the hWnd does not belong to a valid OOHG object, any attempt
      to access a data or method will cause an RTE.
    ; This allows to use TPDFPRINT from a Harbour PRG without
      creating an OOHG's MAIN form. See samples\mixmode\hbgtwvg.

2019-03-07 21:16 UTC-0300 Fernando Yurisich <fyurisich@oohg.org>
  + core\ChangeLog_006.txt
  * core\ChangeLog.txt
    * Renamed to ChangeLog_006.txt and started a new one.
